<Application x:Class="BouncingBalls.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fb="clr-namespace:BouncingBalls"
    xmlns:sys="clr-namespace:System;assembly=mscorlib" 
    StartupUri="BouncingBalls.xaml">
    <Application.Resources>
        
        <sys:Double x:Key="BallSize">10</sys:Double>
        <sys:Double x:Key="DropZoneSize">15</sys:Double>
        <sys:Double x:Key="LineSize">4</sys:Double>
        <sys:Double x:Key="AnchorSize">8</sys:Double>
        
        <!-- Brushes -->

        <SolidColorBrush x:Key="BackgroundBrush" Color="Black"/>
        <SolidColorBrush x:Key="ForegroundBrush" Color="White"/>

        <!-- Styles -->

        <Style TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
        </Style>
        
        <Style TargetType="{x:Type Path}" x:Key="Lines">
            <Setter Property="IsHitTestVisible" Value="False" />
            <Setter Property="Stroke" Value="{StaticResource ForegroundBrush}" />
            <Setter Property="StrokeStartLineCap" Value="Round"/>
            <Setter Property="StrokeEndLineCap" Value="Round"/>
            <Setter Property="StrokeThickness" Value="{DynamicResource LineSize}" />
            <Setter Property="Canvas.ZIndex" Value="1" />
        </Style>
        
        <Style TargetType="{x:Type Path}" x:Key="Balls">
            <Setter Property="Stroke" Value="{StaticResource ForegroundBrush}" />            
            <Setter Property="IsHitTestVisible" Value="False"/>
            <Setter Property="StrokeStartLineCap" Value="Round"/>
            <Setter Property="StrokeEndLineCap" Value="Round"/>
            <Setter Property="StrokeThickness" Value="{DynamicResource BallSize}" />
        </Style>
        
        <Style TargetType="{x:Type fb:Anchor}">
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Width="1" Height="1" ClipToBounds="False">
                            <Border Width="50" Height="50" ClipToBounds="True"
                                    VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-25">
                                <Ellipse x:Name="BackEllipse"
                                     Width="{DynamicResource AnchorSize}" Height="{DynamicResource AnchorSize}"
                                     Fill="{DynamicResource ForegroundBrush}"
                                     Opacity="0" />
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Ellipse.IsMouseOver" Value="true">
                                
                            </Trigger>
                            <Trigger Property="Thumb.IsMouseOver" Value="true">
                                <Setter TargetName="BackEllipse" Property="Opacity" Value="0.6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type ContentControl}" x:Key="AnimatedFocus">
            <Setter Property="Opacity" Value="0.4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentControl">
                        <ContentControl>
                            <ContentPresenter/>
                        </ContentControl>
                        <ControlTemplate.Triggers>
                             <EventTrigger RoutedEvent="Mouse.MouseEnter">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                From="0.4" To="0.8" Duration="0:0:0.2" 
                                                AutoReverse="False" RepeatBehavior="1x" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Mouse.MouseLeave">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                From="0.8" To="0.4" Duration="0:0:0.2" 
                                                AutoReverse="False" RepeatBehavior="1x" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                         </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type fb:DropZone}">
            <Setter Property="Opacity" Value="0.7" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Border Width="1" Height="1" ClipToBounds="False">
                            <Border Width="50" Height="50" ClipToBounds="True"
                                    VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-25">
                                <ContentControl Style="{DynamicResource AnimatedFocus}">
                                    <Ellipse Width="{DynamicResource DropZoneSize}" Height="{DynamicResource DropZoneSize}" Stroke="White" StrokeThickness="1.5" 
                                 Fill="{DynamicResource BackgroundBrush}" />
                                </ContentControl>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Thumb.IsDragging" Value="true">
                                <!--<Setter Property="Opacity" Value="1" />-->
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <!--<Style TargetType="{x:Type fb:Ball}">
            <Setter Property="IsHitTestVisible" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Ellipse Width="{DynamicResource BallSize}" Height="{DynamicResource BallSize}" 
                                 Fill="White" />
                        <ControlTemplate.Triggers>
                            <Trigger Property="Thumb.IsDragging" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="true">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="Opacity"
                                                From="0" To="1" Duration="0:0:0.2" 
                                                AutoReverse="False" RepeatBehavior="1x" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        
        <Style TargetType="{x:Type Ellipse}" x:Key="BouncingBallsLogoImage">
            <Setter Property="Width" Value="7" />
            <Setter Property="Height" Value="7" />
            <Setter Property="Fill" Value="{DynamicResource ForegroundBrush}"/>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="BouncingBallsLogo">
            <!--<Setter Property="Opacity" Value="0.5" />-->
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="FontSize" Value="15" />
            <Setter Property="FontWeight" Value="bold" />
            <Setter Property="FontStyle" Value="italic" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="10,5"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentControl Style="{DynamicResource AnimatedFocus}">
                            <ContentPresenter />
                        </ContentControl>
                        <ControlTemplate.Triggers>
                            <!--<Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="Border" Property="Opacity" Value="0.35" />
                            </Trigger>-->
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                                <!--<Setter Property="Opacity" Value="0.8" />-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="GlowButton">
            <Setter Property="Height" Value="35"/>
            <Setter Property="Width" Value="35"/>
            <!--<Setter Property="Opacity" Value="0.5" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentControl
                            Style="{DynamicResource AnimatedFocus}">
                            <Border                          
                                x:Name="Border"
                                BorderThickness="1"
                                Cursor="Hand"
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource ForegroundBrush}"
                                Margin="5">
                                <ContentPresenter 
                                    Margin="4"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                </ContentPresenter>
                            </Border>
                        </ContentControl>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type Button}" x:Key="GlowOverlayButton">
            <!--<Setter Property="Height" Value="35"/>-->
            <!--<Setter Property="Width" Value="35"/>-->
            <!--<Setter Property="Opacity" Value="0.5" />-->
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <ContentControl
                            Style="{DynamicResource AnimatedFocus}">
                            <Border                          
                                x:Name="Border"
                                BorderThickness="1"
                                Cursor="Hand"
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource ForegroundBrush}"
                                Margin="20,10"
                                Padding="2">
                                <ContentPresenter 
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center">
                                </ContentPresenter>
                            </Border>
                        </ContentControl>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Cursor" Value="Hand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type Grid}" x:Key="Overlay">
            <!--<Setter Property="Opacity" Value="0.9"/>-->
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            <Style.Triggers>
                <Trigger Property="IsVisible" Value="true">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    From="0" To="0.9" Duration="0:0:0.2" 
                                    AutoReverse="False" RepeatBehavior="1x" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation
                                    Storyboard.TargetProperty="Opacity"
                                    From="0.9" To="0" Duration="0:0:0.2" 
                                    AutoReverse="False" RepeatBehavior="1x" />
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <Style TargetType="{x:Type Label}" x:Key="Heading">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        </Style>
        
        <Style TargetType="{x:Type Label}" x:Key="Label">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        </Style>
        
        <Style TargetType="{x:Type Label}" x:Key="Control">
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        </Style>
        
        <Style TargetType="{x:Type TextBlock}" x:Key="Paragraph">
            <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,7,0,7"/>
        </Style>
        
        <Style TargetType="{x:Type Button}" x:Key="ColorSelector">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border
                            Width="25"
                            Height="25"
                            BorderThickness="1"
                            Padding="2"
                            Margin="2"
                            Cursor="Hand"
                            BorderBrush="{DynamicResource ForegroundBrush}">
                            <Rectangle Fill="{TemplateBinding Background}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style TargetType="{x:Type StackPanel}" x:Key="SettingsColumn">
            <Setter Property="Margin" Value="20,0,20,10"/>
        </Style>
        
        <Style TargetType="{x:Type Slider}">
            <Setter Property="Margin" Value="10,0"/>
        </Style>


        <!-- Shapes -->
        <PathGeometry x:Key="CrossSignGeometry"
                      Figures="M13,7 7,13 17,23 7,33 13,39 23,29 33,39 39,33 29,23, 39,13 33,7 23,17Z" />
        <PathGeometry x:Key="LeftSignGeometry" Figures="M10,25 L30,40 20,25 30,10Z" />

    </Application.Resources>
</Application>
